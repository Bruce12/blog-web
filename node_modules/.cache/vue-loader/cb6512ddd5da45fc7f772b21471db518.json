{"remainingRequest":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lanjianhua/Desktop/lanjianhua/blog-web/src/components/MarkdownEditor/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/src/components/MarkdownEditor/index.vue","mtime":1590931601531},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport 'codemirror/lib/codemirror.css'\nimport '@toast-ui/editor/dist/toastui-editor.css'\nimport 'highlight.js/styles/github.css'\nimport codeSyntaxHighlight from '@toast-ui/editor-plugin-code-syntax-highlight'\nimport hljs from 'highlight.js'\nimport { Editor } from '@toast-ui/vue-editor'\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator'\nimport defaultOptions from './default-options'\n@Component({\n  name: 'MarkdownEditor',\n  components: {\n    Editor\n  }\n})\nexport default class extends Vue {\n  @Prop({ required: true }) private value!: string\n  @Prop({ default: () => defaultOptions }) private options!: any\n  @Prop({ default: 'markdown' }) private mode!: string\n  @Prop({ default: '300px' }) private height!: string\n  // https://github.com/nhnent/tui.editor/tree/master/src/js/langs\n  @Prop({ default: 'en_US' }) private language!: string\n\n  private editorText: string = '<h1>这是标题df</h1><pre class=\"lang-js\"><code data-language=\"js\">console.log(aa)</code></pre>'\n  private markdownEditor?: Editor\n  private val: string = ''\n\n  get editorOptions() {\n    const options = Object.assign({}, defaultOptions, this.options)\n    options.initialEditType = this.mode\n    options.height = this.height\n    options.language = this.language\n    options.plugins = [[ codeSyntaxHighlight, { hljs } ]]\n    return options\n  }\n  private onEditorChange(val: string) {\n    let html = (this.$refs.toastuiEditor as Editor).invoke('getMarkdown')\n    console.log('html', html)\n  }\n}\n",null]}