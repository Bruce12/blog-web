{"remainingRequest":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lanjianhua/Desktop/lanjianhua/myMusic/src/components/Ellipsis/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/src/components/Ellipsis/index.vue","mtime":1575252709166},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Watch, Vue } from 'vue-property-decorator'\nimport { addClass, getStyle, eventOn, eventOff } from '@/utils/dom'\nimport Ellipsis from './ellipsis'\n@Component({\n  name: 'ExpandText'\n})\nexport default class extends Vue {\n  // 要截取的行数\n  @Prop({ default: 2 }) private lineClamp!: number\n  @Prop({ default: '' }) private ellipsis!: string\n  // 持续的时间\n  @Prop({ default: 300 }) private duration!: number\n  private isExpand: boolean = false\n  private expandText: string = '...'\n  private toggleVal: Array<string> = ['...', '收起']\n  private hideExpand: boolean = true\n  private height: string = 'auto'\n  private maxHeight!: number\n  private minHeight!: number\n  private show: boolean = true\n  private text: string = this.ellipsis\n  private ellippsisText = ''\n  private eps!: any\n  private timer!: any\n  created() {\n    this.eps = new Ellipsis(this.ellipsis, this.lineClamp, this.toggleVal)\n    this.init()\n  }\n  mounted() {\n    this.$nextTick(() => {\n      eventOn(window, 'resize', this.onResize)\n    })\n  }\n  destroyed() {\n    eventOff(window, 'resize', this.onResize)\n  }\n  get _duration() {\n    return (this.duration || 300) / 1000\n  }\n  private onResize() {\n    clearTimeout(this.timer)\n    this.expandText = this.toggleVal[0]\n    this.isExpand = false\n    this.height = this.minHeight + 'px'\n    this.timer = setTimeout(() => {\n      this.init()\n    }, 200)\n  }\n  private init() {\n    this.$nextTick(() => {\n      let elTarget = this.$refs.expandBody as HTMLElement\n      let resData = this.eps.cliff(elTarget)\n      this.ellippsisText = resData.ellipsis\n      this.height = resData.minHeight + 'px'\n      if (!resData.isCliff) {\n        this.ellippsisText = this.ellipsis\n      }\n      // console.log(resData)\n      this.text = this.ellippsisText\n      this.minHeight = resData.minHeight\n      this.maxHeight = resData.maxHeight\n      this.show = resData.isCliff\n    })\n  }\n  // 内容展开收起\n  private toggle() {\n    this.isExpand = !this.isExpand\n    if (this.isExpand) {\n      this.text = this.ellipsis\n      this.expandText = this.toggleVal[1]\n      this.height = this.maxHeight + 'px'\n    } else {\n      this.height = this.minHeight + 'px'\n      setTimeout(() => {\n        this.text = this.ellippsisText\n        this.expandText = this.toggleVal[0]\n      }, this.duration)\n    }\n  }\n}\n",null]}