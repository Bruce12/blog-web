{"remainingRequest":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lanjianhua/Desktop/lanjianhua/blog-web/src/components/TapSwitch/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/src/components/TapSwitch/index.vue","mtime":1592553878473},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop, Watch } from 'vue-property-decorator'\n\n@Component({\n  name: 'TapSwitch'\n})\n\n/**\n *  ckeckebox radio 单选多选\n *  数据格式列：[{label: '选项1', value: 'code1'}]\n */\nexport default class extends Vue {\n  // { name: 'item1', code: 'code1', selected: true, disabeld: true }\n  @Prop({ default: [] }) private list!: Array<any>\n  @Prop({ default: 'radio' }) private type!: string\n  @Prop() private tabClick!: Function\n  @Prop({ default: false, type: Boolean }) private keep!: boolean\n  @Prop({ default: '' }) private label!: string\n  @Prop({ default: 'value' }) private value!: string\n  @Prop({ default: false, type: Boolean }) private cleanable!: boolean\n  @Prop({ default: 'mini' }) private size!: string\n  @Prop({ default: '' }) private itemClass!: string\n  @Prop({ default: false, type: Boolean }) private group!: boolean\n  // 选中值\n  private selectedData!: any\n  private dataList: Array<any> = []\n  created() {\n    this.initPage()\n  }\n  private initPage() {\n    this.dataList = this.list.map((item: any) => {\n      if (!item.selected) item.selected = false\n      if (!item.disabled) item.disabled = false\n      let newItem = Object.assign({}, item)\n      return newItem\n    })\n  }\n  @Watch('list', { deep: true })\n  private onListChang(value: any[]) {\n    this.initPage()\n  }\n  private clickItem(item: any, index: number) {\n    // 处理 checkbox radio 情况， keep： 再次点击取消\n    this.dataList.forEach((o:any, inx: number) => {\n      if (this.type === 'radio') {\n        if (inx === index) {\n          o.selected = this.keep ? true : !o.selected\n        } else {\n          o.selected = false\n        }\n      } else if (this.type === 'checkbox') {\n        if (inx === index) {\n          o.selected = this.keep ? true : !o.selected\n        }\n      }\n    })\n    this.$set(this.dataList, index, item)\n    this.setSelectedItem(item, index)\n    this.$emit('update:list', this.dataList)\n    if (typeof this.tabClick === 'function') {\n      // 返回选中的值，和当前的Item\n      this.tabClick(this.selectedData)\n    }\n  }\n  private setSelectedItem(item: any, inx: number) {\n    let newItem: any = item\n    if (this.type === 'radio') {\n      item.selected ? this.selectedData = newItem : this.selectedData = {}\n    } else if (this.type === 'checkbox') {\n      if (!this.selectedData) {\n        this.selectedData = [newItem]\n        return\n      }\n      let list = (this.selectedData as Array<any>)\n      let isExist = list.some((o: any) => o[this.value] === item[this.value])\n      if (isExist) {\n        if (!item.selected) list.splice(inx, 1)\n      } else {\n        if (item.selected) list.push(newItem)\n      }\n    }\n  }\n  private del(index: number) {\n    let item = this.dataList.splice(index, 1)\n    this.$emit('clear', { index, item: item[0] })\n  }\n}\n",null]}