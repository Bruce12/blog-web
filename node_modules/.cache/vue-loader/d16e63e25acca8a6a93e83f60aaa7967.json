{"remainingRequest":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lanjianhua/Desktop/lanjianhua/blog-web/src/components/DragTree/index.vue?vue&type=template&id=143afaea&scoped=true&","dependencies":[{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/src/components/DragTree/index.vue","mtime":1588936943000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div\n  class=\"drag_tree\"\n  :class=\"{'drag_tree__root': isRoot}\"\n  @mousemove=\"onMousemoveHandler\"\n  @mouseleave=\"onMouseleaveHandler\"\n>\n  <div\n    ref=\"nodes\"\n    class=\"drag_tree__list\">\n    <div\n      v-for=\"(node, index) in nodes\"\n      :key=\"index\"\n      class=\"drag_tree__node\"\n      :class=\"{'tree_selected': node && node.isSelected}\"\n    >\n      <!--拖拽经过元素上方时显示-->\n      <div\n        class=\"drag_tree_cursor\"\n        :style=\"{visibility:\n          cursorPosition &&\n          cursorPosition.node.pathStr === node.pathStr &&\n          cursorPosition.placement === 'before' ?\n            'visible' :\n            'hidden'\n        }\"\n        @dragover.prevent\n      />\n      <!--数节点的item-->\n      <div\n        class=\"tree_item\"\n        :path=\"node.pathStr\"\n        :class=\"{'tree_item_cursor_hover': cursorPosition &&\n                   cursorPosition.node.pathStr === node.pathStr,\n                 'tree_item_cursor_inside': cursorPosition &&\n                   cursorPosition.placement === 'inside' &&\n                   cursorPosition.node.pathStr === node.pathStr\n        }\"\n        @mousedown=\"onNodeMousedownHandler($event, node)\"\n        @mouseup=\"onNodeMouseupHandler($event, node)\"\n        @dragover=\"onExternalDragoverHandler(node, $event)\"\n        @drop=\"onExternalDropHandler(node, $event)\"\n        @contextmenu=\"emitNodeContextmenu(node, $event)\"\n        @click=\"onToggleHandler($event, node)\"\n      >\n        <!--间距-->\n        <div v-for=\"(id, inx) in gaps\" :key=\"inx\" class=\"drag_tree_gap\"/>\n        <div class=\"drag_tree_title\">\n          <!--toggle-->\n          <span v-if=\"!node.isLeaf\" class=\"drag_tree_toggle\">\n            <slot name=\"toggle\" :node=\"node\">\n              <span> {{ !node.isLeaf ? (node.isExpanded ? '-' : '+') : '' }}</span>\n            </slot>\n          </span>\n          <slot name=\"title\" :node=\"node\">{{node.guideCate}}</slot>\n          <slot v-if=\"!node.isLeaf && node.nodes.length === 0 && node.isExpanded\" name=\"empatyNode\" :node=\"node\"/>\n        </div>\n\n        <div class=\"drag_tree_sidebar\">\n          <slot name=\"sidebar\" :node=\"node\"/>\n        </div>\n\n      </div>\n      <DragTree\n        v-if=\"node.nodes && node.nodes.length && node.isExpanded\"\n        :value=\"node.nodes\"\n        :level=\"node.level\"\n        :parent-ind=\"index\"\n        :edge-size=\"edgeSize\"\n        :show-branches=\"showBranches\"\n        :allow-toggle-branch=\"allowToggleBranch\"\n        @dragover.prevent\n      >\n        <template #title=\"{node}\">\n          <slot name=\"title\" :node=\"node\">{{node.guideCate}}</slot>\n        </template>\n\n        <template #toggle=\"{node}\">\n          <slot name=\"toggle\" :node=\"node\">\n            <span>{{ !node.isLeaf ? (node.isExpanded ? '-' : '+') : '' }}</span>\n          </slot>\n        </template>\n        <template #sidebar=\"{node}\">\n          <slot name=\"sidebar\" :node=\"node\"/>\n        </template>\n        <template #emptyNode=\"{node}\">\n          <slot v-if=\"!node.isLeaf && node.nodes.length === 0 && node.isExpanded\" :node=\"node\" name=\"emptyNode\"/>\n        </template>\n      </DragTree>\n      <!--拖拽经过元素下方时显示-->\n      <div\n        class=\"drag_tree_cursor\"\n        :style=\"{visibility:\n          cursorPosition &&\n          cursorPosition.node.pathStr === node.pathStr &&\n          cursorPosition.placement === 'after' ?\n            'visible' :\n            'hidden'\n        }\"\n        @dragover.prevent\n      >\n        <!-- suggested place for node insertion  -->\n      </div>\n    </div>\n    <!--拖拽时样式-->\n    <div v-show=\"isDragging\" v-if=\"isRoot\" ref=\"dragInfo\" class=\"drag_tree_drag_info\">\n      <slot name=\"draginfo\">\n        <template v-if=\"lastSelectedNode\">\n          <span class=\"tree_title\">{{ lastSelectedNode.guideCate }}</span>\n          <span class=\"tree_id\"> #{{lastSelectedNode.id}}</span>\n        </template>\n      </slot>\n    </div>\n  </div>\n</div>\n",null]}