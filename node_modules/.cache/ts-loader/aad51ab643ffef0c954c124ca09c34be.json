{"remainingRequest":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/babel-loader/lib/index.js!/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/ts-loader/index.js??ref--14-2!/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/lanjianhua/Desktop/lanjianhua/blog-web/src/utils/life-cycle.ts","dependencies":[{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/src/utils/life-cycle.ts","mtime":1593485728618},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/blog-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n\n/** 自定义生命周期函数 */\nimport Vue from 'vue';\n\nvar notifyVisibilityChange = function notifyVisibilityChange(lifeCycleName, vm) {\n  var lifeCycles = vm.$options[lifeCycleName];\n  console.log('lifeCycles', vm); // 生命周期函数存在 $options 中\n\n  if (lifeCycles && lifeCycles.length) {\n    lifeCycles.forEach(function (lifecycle) {\n      lifecycle.call(vm);\n    });\n  } // 遍历所有的子组件，然后依次递归执行\n\n\n  if (vm.$children && vm.$children.length) {\n    vm.$children.forEach(function (child) {\n      notifyVisibilityChange(lifeCycleName, child);\n    });\n  }\n};\n/**\n * 添加生命周期钩子函数\n */\n\n\nexport function init() {\n  var optionMergeStrategies = Vue.config.optionMergeStrategies;\n  optionMergeStrategies.pageVisible = optionMergeStrategies.beforeCreate;\n  optionMergeStrategies.pageHidden = optionMergeStrategies.created;\n  console.log('optionMergeStrategies', Vue.config.optionMergeStrategies);\n}\n/**\n * 将事件绑定到根节点上\n */\n\nexport function bind(rootVm) {\n  addEventListener('visibilitychange', function () {\n    // 判断调用哪个生命周期函数\n    var lifeCycleName = '';\n\n    if (document.visibilityState === 'hidden') {\n      lifeCycleName = 'pageHidden';\n    } else if (document.visibilityState === 'visible') {\n      lifeCycleName = 'pageVisible';\n    }\n\n    if (lifeCycleName) {\n      // 通知所有组件生命周期发生变化了\n      notifyVisibilityChange(lifeCycleName, rootVm);\n    }\n  });\n}",null]}