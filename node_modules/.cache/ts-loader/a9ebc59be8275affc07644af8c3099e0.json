{"remainingRequest":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/babel-loader/lib/index.js!/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/ts-loader/index.js??ref--14-2!/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/eslint-loader/index.js??ref--13-0!/Users/lanjianhua/Desktop/lanjianhua/myMusic/src/pwa/register-service-worker.ts","dependencies":[{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/src/pwa/register-service-worker.ts","mtime":1566791816032},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/* eslint-disable no-console */\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(\"\".concat(process.env.BASE_URL, \"service-worker.js\"), {\n    ready: function ready() {\n      console.log('App is being served from cache by a service worker.\\n' + 'For more details, visit https://goo.gl/AFskqB');\n    },\n    registered: function registered(registration) {\n      console.log('Service worker has been registered.'); // Routinely check for app updates by testing for a new service worker.\n\n      setInterval(function () {\n        registration.update();\n      }, 1000 * 60 * 60); // hourly checks\n    },\n    cached: function cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound: function updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated: function updated(registration) {\n      console.log('New content is available; please refresh.'); // Add a custom event and dispatch it.\n      // Used to display of a 'refresh' banner following a service worker update.\n      // Set the event payload to the service worker registration object.\n\n      document.dispatchEvent(new CustomEvent('swUpdated', {\n        detail: registration\n      }));\n    },\n    offline: function offline() {\n      console.log('No internet connection found. App is running in offline mode.');\n    },\n    error: function error(_error) {\n      console.error('Error during service worker registration:', _error);\n    }\n  });\n}",null]}