{"remainingRequest":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/babel-loader/lib/index.js!/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/ts-loader/index.js??ref--14-2!/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/eslint-loader/index.js??ref--13-0!/Users/lanjianhua/Desktop/lanjianhua/myMusic/src/components/ExpandMore/ellipsis.ts","dependencies":[{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/src/components/ExpandMore/ellipsis.ts","mtime":1574746285696},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lanjianhua/Desktop/lanjianhua/myMusic/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n// 传入的text 目标的 dom target 用于复制的版本\n// 返回 截取后的text， 截取后元素的高度\nimport { getStyle } from '@/utils/dom'; // 计算处理行数\n\nvar Ellipsis =\n/*#__PURE__*/\nfunction () {\n  function Ellipsis(text, target, lineClamp, toggleVal) {\n    _classCallCheck(this, Ellipsis);\n\n    this.rawText = text;\n    this.target = target;\n    this.lineClamp = lineClamp;\n    if (toggleVal) this.toggleVal = toggleVal;\n  }\n\n  _createClass(Ellipsis, [{\n    key: \"cliff\",\n    value: function cliff() {\n      // 获取目标元素样式\n      clearTimeout(this.timer);\n      var tragetStyle = getStyle(this.target);\n      var lineHeight = parseInt(tragetStyle.lineHeight); // 获取显示的行数\n\n      var at = this.lineClamp * lineHeight; // 克隆目标元素\n\n      this.setTempDiv(); // 获取目标元素最大高度\n\n      this.getHeight(); // 初始化\n\n      if (this.maxHeight > at) {\n        this.handleCilff(at);\n        this.isCliff = true;\n      } else {\n        this.minHeight = this.maxHeight;\n        this.isCliff = false;\n      }\n\n      this.timer = setTimeout(function () {\n        document.body.removeChild(Ellipsis.tempElement);\n        Ellipsis.tempElement = null;\n      }, 4000);\n      return {\n        ellipsis: this.cliffText,\n        maxHeight: this.maxHeight,\n        minHeight: this.minHeight,\n        isCliff: this.isCliff\n      };\n    }\n  }, {\n    key: \"handleCilff\",\n    value: function handleCilff(at) {\n      var i = 0;\n      var el = Ellipsis.tempElement;\n      var h = 0;\n      var str = '';\n      var extra = this.toggleVal && this.toggleVal[0] || '';\n\n      while (h <= at) {\n        h = parseInt(getStyle(el).height || '');\n        i++;\n        str = this.rawText.substring(0, i);\n        el.innerText = str + extra;\n\n        if (i >= this.rawText.length) {\n          h = 1;\n          at = 0;\n        }\n      }\n\n      this.cliffText = str.substring(0, str.length - 1 - extra.length);\n      el.innerText = str.substring(0, str.length - 2);\n      this.minHeight = parseInt(getStyle(el).height || '');\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      var style = getStyle(this.target);\n      var width = style.width;\n      var el = Ellipsis.tempElement;\n      el.style.width = width;\n      el.style.fontSize = style.fontSize;\n      el.style.lineHeight = style.lineHeight;\n      el.innerText = this.rawText + (this.toggleVal && this.toggleVal[1] || '');\n      var height = parseInt(getStyle(el).height || '');\n      this.maxHeight = height; // 设置会初始\n\n      this.setTempDiv();\n    } // 克隆目标元素\n\n  }, {\n    key: \"setTempDiv\",\n    value: function setTempDiv() {\n      var style = getStyle(this.target);\n\n      if (!Ellipsis.tempElement) {\n        Ellipsis.tempElement = this.target.cloneNode();\n        document.body.appendChild(Ellipsis.tempElement);\n      } // 添加到body 用于计算 宽高\n\n\n      Ellipsis.tempElement.style.width = style.width;\n      Ellipsis.tempElement.style.lineHeight = style.lineHeight;\n      Ellipsis.tempElement.style.height = 'auto';\n      Ellipsis.tempElement.style.fontSize = style.fontSize;\n      Ellipsis.tempElement.innerHTML = '';\n      Ellipsis.tempElement.style.opacity = '0';\n    }\n  }]);\n\n  return Ellipsis;\n}();\n\nexport default Ellipsis;",null]}